<p>
	<strong></strong>This project has involved a significant amount of software and hardware work and we present how we achieved our goal as follows :-</p><p>
	<span style="background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);"><strong> <inline style="color: rgb(151, 72, 6); background-color: rgb(0, 0, 0);"></inline></strong></span><strong><span style="font-family: Times New Roman;"><inline style="font-family: Arial;"><inline style="font-family: Helvetica;"><inline style="font-family: Helvetica; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);">Software Part of Pen Plotter :-</inline></inline></inline></span></strong></p><p style="margin-left: 20px;">
	The algorithm which we have used writing the letter is:-</p><p style="margin-left: 40px;">
	<em>We have converted the image of the letter into a binary array which contains the boundary of the letter. If an element has the value 1, then is it on the boundary otherwise not. Then, we search for the nearest 1 in the array with respect to a defined origin. From that location, we search if any adjacent cell has the value one. This process is repeated again. After we move to the next cell, we change the value of the previous cell to 0 so as to ensure no repetition of steps. </em></p><p style="margin-left: 40px;">
	<em>During this process, if there is no adjacent cell having the value 1, we again search for the nearest one and then continue the process. The process is finally terminated when all the elements of the array are zero.</em></p><p style="margin-left: 40px;">
	<em>When this process is being accomplished, we record the coordinates of such each time and store it. Thus, we get a path which the bot can follow to write a letter properly. Now, to write the letter, we take this sequence of coordinates and starting from the beginning of this sequence, we check two adjacent coordinates and then send the </em></p><p style="margin-left: 40px;">
	<em>appropriate signal to Arduino in order to move the motors.</em></p><p style="text-align: justify;"></p><p style="text-align: justify;">
	<img src="http://s10.postimg.org/cunzk8wmx/matrix.jpg" style="width: 316px;"><img src="http://s30.postimg.org/qx89lt9ap/processed_image.jpg"></p><p style="text-align: justify;">
	The software is divided into two parts - The Pen Plotter and The Sketcher.</p><p style="text-align: justify;">
	The Pen Plotter is used to write a document in a paper in the user's handwriting and the Sketcher is used to draw an image in the paper.</p><p style="text-align: justify;">
	We have developed a GUI where the user can chose between these two options.</p><p style="text-align: justify;">
	We have developed a GUI for both the Sketcher and the Pen Plotter.</p><p style="text-align: justify;">
	For the Sketcher:-</p><p style="text-align: justify; margin-left: 20px;">
	The GUI contains two buttons named "Select Image" and "Draw Image".</p><p style="text-align: justify; margin-left: 20px;">
	On clicking "Select Image", a file selection dialog box opens where the user is restricted to choose a .jpg or a .jpeg file for the image. The image is processed accordingly and saved.</p><p style="text-align: justify; margin-left: 20px;">
	On clicking "Draw Image", the processed image is then drawn on the paper by the bot.</p><p style="text-align: justify; margin-left: 20px;"></p><p style="text-align: justify; margin-left: 20px;">
	We have developed a username system where the user has to enter a username and then we check if the user has used the program before. If the user has not used it before, then he/she would have to chose the location of the letters but if he/she has, then all the user has to do is to select the document.</p><p style="margin-left: 20px;">
	When a new user is operating, we save the path of coordinates of all the letters that he has chosen in a .mat file under his/her name. Thus when he/she operates again, we use that .mat file as a reference to write with the appropriate handwriting.</p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	We have developed a graphical user interface which include the "Select Document", "Select Images of Letters" and "Write Document" orders.</p><p style="margin-left: 20px;">
	On clicking "Select Document", a file selection dialog box opens and the user is restricted to choose a .txt file from the computer.</p><p style="margin-left: 20px;">
	On clicking "Select Images of Letters", a file selection dialog box opens and the user chooses the images of the letters. As the user chooses the letter, we process it and save the path of coordinates of every letter in a .mat file in his name so that we can use it again when the user operates again.</p><p style="margin-left: 20px;">
	On clicking "Write Document", the bot starts to write the selected document in the handwriting of the user using the images of letters as a reference.</p><p style="margin-left: 20px;">
	(When a registered user operates, then "Select Images of Letters" doesn't appear on the GUI.)</p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	Image Processing Part - The images chosen by the user is processed and converted in a logical array in which the elements having the value 1 represent the boundary of the letter. We convert every image to a 200*200 array for uniformity and non-ambiguity. Then, we convert it in to grey scale and then to binary. We use the Laplacian filter. Now, after we have got the logical array representing the letter, we delete the columns which have only zeroes since this would result in space efficiency on the paper. Then, we generate the path of coordinates through the algorithm explained above and use that to send signal to the bot to write.</p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	<strong>MATLAB+Arduino Interfacing</strong></p><p style="margin-left: 20px;">
	One of the major problem we faced was to send data from MATLAB to Arduino without data lose for long time.For that we have used modified code of ADIOE Code from MATLAB Arduino support package.Main idea is to create Stepper and Servo type objects in Arduino code and use MATLAB command to change Pin Voltages as input signals.</p><p style="margin-left: 20px;">
	For pen up and pen down single digital pin is used and for stepper one digital pin for direction and one analog pin for magnitude of steps.</p><p style="margin-left: 20px;">
	We have used two Arduinos to move both motors almost simultaneously.</p><p style="margin-left: 20px;">Contact - Sudipto Banerjee ; Balraj Parmar</p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	<strong> Hardware:-</strong></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	For motion control we have used Lead Screw of pitch 3mm and stepper motor with 200 steps/revolution(1.8 degree/step) and 4.2 N-m torque. Lead Screw's coupling used is starflex type. </p><p style="margin-left: 20px;">As for the body we have made it out of wood and the moving parts used are sliders(used in drawers)for the paper platform and we have used the LM8UU bearing's steel shaft for the pen platform to move.The important parts which were to be cut very precisely have been cut by CNC machine.</p><p style="margin-left: 20px;">The DC power sources used are linear type not the SMPS type.The motor drivers used are L298N .</p><p style="margin-left: 20px;">The cable drag chain helps the wire to move to and fro without getting entangled.</p><p style="margin-left: 20px;">We have also included a manual mode along with an automatic mode in which(manual mode) you can control the machine by DPDT buttons and we have provided 3 buttons namey 2 DPDT buttons and one two-waycswitch for moving the pen up and down.</p><p style="margin-left: 20px;">We have made a special method to set the origin every time we start the machine we have pasted two aluminium sheets one with the end supports and the other with the moving platform and whenever they come in contact another circuit is completed and the arduino gets to know that and the motor is stopped there and if the circuit is not completed the motor continues to move until the platform reaches the origin,same procedure has been carried out for both the platforms .</p><p style="margin-left: 20px;">The rest parts are self-explanatory. All hardware related pics are below and if there is any doubt feel free to contact Prathu Baronia or Yogesh Mahajan .</p><p style="margin-left: 20px;">
	<strong></strong></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;">
	<strong></strong></p><p style="margin-left: 20px;"></p><p style="margin-left: 20px;"></p><p style="margin-left: 40px;"></p><p style="margin-left: 40px;"></p>