<p>Our project consist of
two phases :</p><p><strong>1. Building a RC plane.</strong></p><p><strong>2. Making it Autonomous.</strong></p><hr><p><u><strong>1.Building The Structure Of
RC PLANE:</strong></u></p><p>In this phase we made our RC
plane using coroplast and styrofoam. We faced challanges like deciding  dimension of each part of our plane,</p><p> giving proper airfoil shape to the wing section of our plane, designing each part of plane.</p><p>Following are the dimensions
of our airplane:</p><p>•<span style="color: rgb(31, 73, 125);">Fuselage length - 67.5
cm</span></p><p><span style="color: rgb(31, 73, 125);">•Wing-Span - 96 cm</span></p><p><span style="color: rgb(31, 73, 125);">•Wing Chord - 18 cm</span></p><p><span style="color: rgb(31, 73, 125);">•Horizontal Wing Span -
47 cm</span></p><p><span style="color: rgb(31, 73, 125);">•Horizontal wing chord -
12.5 cm</span></p><p><span style="color: rgb(31, 73, 125);">•Vertical tail length -
23.5 cm</span></p><p><span style="color: rgb(31, 73, 125);">•Vertical tail width- 9
cm</span></p><hr><p><u><strong>2.Building the Autonomous System of RC PLANE:</strong></u></p><p>This phase was the most challanging part of our project. In this phase we worked on the electronics and coding aspects of our project.</p><hr>
<p><strong>A.GETTING RAW READINGS FROM IMU:</strong></p><p>It start with getting raw reading from imu MPU-6050. We used I2Cdev dibrary for MPU-6050, from where we coded on arduino IDE to get the </p><p>raw data of acceleration(from accelerometer of IMU) and angular velocity(from gyroscope of IMU) in digital format.</p><p>code for this is uploaded above.</p><p><img src="https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xpt1/v/t35.0-12/11294532_366026663595338_680832515_o.jpg?oh=d7732a90c84d81c1ecec9ae923b8222a&amp;oe=55803E0E&amp;__gda__=1434538911_bcb675e19882d0c851a51be0fa9aff82" style="width: 934px;"></p><hr>
<p><strong>B.GETTING ORIENTATION USING RAW DATA:</strong></p><p>one way of getting the orientation(pitch roll and yaw angle) is to integrate the angular velocity data with time in the respective axes.</p><p>But there is a problem with this method, drift error during integration accumulates and increases with time, due to which  plane</p><p>cannot fly longer than a minute or two.It will stall after that due to increased error in orientation data. </p><p>We need to reduce this drift error!!!!</p><p><strong>DRIFT REDUCTION:</strong></p><p>we simply added an offset in integration process to reduce drift, as data from IMU was less noisy so it worked out well.</p><p>after that we get something like this:</p><p>// follow the video link):</p><p><a class="embedly-card" href="https://drive.google.com/file/d/0B-dIpygoX16Wc3c3OTNiLUFiemM/edit?usp=drive_web">drift error solution.WMV</a></p><p><strong>C.CONTROLLING THE SERVOS:</strong></p><p>Now we have orientation of the plane , so we can feed this data to MCU(ARDUINO UNO), so that it can actuate the servo motors</p><p>of the control surfaces of our RC planne. So now we need an algorithm that is to be feeded to MCU, so that it can decide by how much</p><p>servo should be moved for given orientation of plane.</p><p>Here we are using PID controller algorithm to do that.The  algorithm work in following steps:</p><p><strong>STEP1:</strong>A reference heading(ROLL,PITCH AND YAW ANGLE) of plane is feded.</p><p><strong>STEP2:</strong>MCU compares the current orientation with the reference orientation.</p><p><strong>STEP3:</strong>Using PID algorithm, MCU calculates the error and actuate servos in a manner that current orientation is made to approach the</p><p>             reference </p><p><strong>Here is a basic circuit diagram representing the details of automated system of our RC plane :</strong></p><p><strong><br></strong></p><p><img src="https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xta1/v/t35.0-12/11303795_366087653589239_1813813288_o.jpg?oh=db30a85d36dc9598542b78e325bae91a&amp;oe=55807413&amp;__gda__=1434470255_2996f58396ffd981b2db7163dc59c7c0" style="width: 927px;"></p><p><u><strong>PROBLEMS FACED:</strong></u></p><p><strong>Problem with the relays:</strong></p><p><strong>RELAY:</strong></p><p>IT is an electrically operated switch, which uses electromagnet to mechanically operate the switch.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/2/24/Relay.jpg" style="width: 163px;"></p><p><strong>USE OF RELAY:</strong></p><p>We planned to use relay to switch between manual and automated mode( i.e : switching the signal wire of servo motor between</p><p>arduino and Radio receiver).//SEE THE CIRCUIT DIAGRAM</p><p><strong>PROBLEM: </strong></p><p>Problem with relay is that it requires high current to operate the electromagnet, due to which LIPO battery suffered a very rapid potential drop.</p><p>so ,in a few minutes battery didn't had enough voltage to operate the relay. Thus , relay didn't worked and we were not able to switch</p><p>between manual and automated mode.</p><p><strong>SOLUTION:</strong></p><p>To solve this problem we used an alternative technique of switching, <strong>USING LOGIC GATES, </strong>which uses less current for operation. (idea provided by one of our friend.)</p><p>for this project we used AND gate(IC 7408) and OR gate(IC 7432).</p><p><img src="https://fbcdn-sphotos-h-a.akamaihd.net/hphotos-ak-xta1/v/t35.0-12/11261861_371283336403004_152664247_o.jpg?oh=3eae6749eddc228697ccf93e9759f397&amp;oe=5580888F&amp;__gda__=1434474640_fab1a113520dd7fdd4c5494acf2bfb80" style="width: 1040px;"></p><p>//link to our first video</p><p><a class="embedly-card" href="https://youtu.be/nwzzABinG20">AUTOMATEDrc@IITB</a></p>