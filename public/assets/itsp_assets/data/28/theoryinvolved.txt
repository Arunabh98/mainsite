<h3><span style="font-family: Arial;">Artificial Intelligence</span></h3><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">Heuristic Function (also called an Evaluation Function) is the scoring function that determines the score of a given state by using specific features of the state of the game. In our case of Connect-4, we have designed our heuristic function as follows:</span></h5><h5 style="margin-left: 40px;">
	<span style="font-family: Arial;">1. The heuristic function is proportional to the power of number of chips that are continuous in a row/column/diagonal. This is added up for every row,column and diagonal.</span></h5><h5 style="margin-left: 40px;"><span style="font-family: Arial;">Note: The value calculated for each row/column/diagonal has a positive or negative sign depending on which coloured chips are present consecutively in that row or column.</span><br><span style="font-family: Arial;"></span></h5><h5 style="margin-left: 40px;">
	<span style="font-family: Arial;">2. The heuristic function gives a very high value(like INT_MAX) to 4 chips consecutively in a row/column/diagonal.</span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">'Max' and 'Min' can be considered to be the two players of the game(considering two-player games only) . 'Max' will try to maximize the heuristic function at every Max move and 'Min' will try to minimize the heuristic at every Min move. </span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">MinMax (also known as minimax) algorithm is an algorithm that can be used to find the best possible move/action for each player(Min and Max). Further details about the MinMax Algorithm can be found at <a href="http://web.stanford.edu/~msirota/soco/minimax.html">http://web.stanford.edu/~msirota/soco/minimax.html</a> .</span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">Alpha-Beta pruning is  a way of avoiding subtrees of searches which won't be selected. Further details can be found at <a href="http://cs.ucla.edu/~rosen/161/notes/alphabeta.html">http://cs.ucla.edu/~rosen/161/notes/alphabeta.html</a> .</span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">MinMax algorithm with alpha-beta pruning is used to get a depth of 10 (at reasonable speeds) for Connect4 game. </span></h5><p style="margin-left: 20px;">
	<br>
	<span style="font-family: Arial;"></span></p><h3><span style="font-family: Arial;">Image Processing</span></h3><h5 style="margin-left: 20px;"><a href="https://en.wikipedia.org/wiki/OpenCV"><span style="color: rgb(255, 255, 255);"><inline><inline style="font-family: Arial;">OpenCV</inline></inline></span></a><span style="color: rgb(255, 255, 255);"><inline><inline style="font-family: Arial;"> is used for Image Processing.</inline></inline></span></h5><h5 style="margin-left: 20px;"><span style="color: rgb(255, 255, 255);"><inline><inline style="font-family: Arial;"><a href="http://docs.opencv.org/modules/highgui/doc/reading_and_writing_images_and_video.html#videocapture">VideoCapture()</a> class is used to get a continuous stream of the image (of the 
board) using laptop webcam. This image of the board is first reduced to 
7:6 ratio since the board has the same ratio of dimensions. The <a href="http://docs.opencv.org/modules/core/doc/operations_on_arrays.html#inrange">inRange()</a> method is used on image matrix( <a href="http://docs.opencv.org/modules/core/doc/basic_structures.html#mat">Mat</a> ) to filter colors. We need only yellow and red colors, hence inRange() is 
correspondingly used. The range we used is in terms of the HSV values. 
Hence, red and yellow colors separate into binary images. Using the binary images, current state of board is obtained.</inline></inline></span></h5><h5 style="margin-left: 20px;"><span style="font-family: Arial;">This is used to determine whose turn it is, the human's or the computer's. If it is the human's move, then the computer waits until the state of the board is changed in order to trigger the AI. Else it keeps checking if the computer's move has been executed by motor and then waits for player to move. Once the AI code is run, the column number where the bot must make its move is fed to the Arduino through serial port communication. Serial Port Communication is achieved using the library &lt;SerialStream.h&gt; in C++. The official documentation of &lt;SerialStream.h&gt; can be found at <a href="http://libserial.sourceforge.net/x27.html" target="_blank">http://libserial.sourceforge.net/x27.html</a> . This triggers the arduino code and instructs the motors as described below.</span></h5><p style="margin-left: 20px;">
	<br>
	<span style="font-family: Arial;"></span></p><h3><span style="font-family: Arial;">Electronic/Mechanics</span></h3><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">A capacitor is used for stabilising the output of the Servo motor. </span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">The circuit used for the servo is:</span></h5><p style="margin-left: 20px;">
	<span style="font-family: Arial;"></span></p><center><a target="_blank" href="https://learn.adafruit.com/adafruit-arduino-lesson-14-servo-motors/if-the-servo-misbehaves"><img src="https://learn.adafruit.com/system/assets/assets/000/002/415/medium800/learn_arduino_fritzing_with_cap.jpg?1396782854" height="250px" width="250px"></a></center> <br><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">( Ref: <a href="https://learn.adafruit.com/adafruit-arduino-lesson-14-servo-motors/if-the-servo-misbehaves" target="_blank">https://learn.adafruit.com/adafruit-arduino-lesson-14-servo-motors/if-the-servo-misbehaves</a></span> )</h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">The DC motor is run using L293D as the motor driver. </span></h5><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">
	The circuit used is standard (only 1 motor used) :</span></h5><p style="margin-left: 20px;">
	<span style="font-family: Arial;"><a href="https://drive.google.com/file/d/0BxP5VcAKnPrGekFFUXFLdUszXzA/view?usp=sharing" target="_blank"></a></span></p>
<!--<center><a href="https://drive.google.com/file/d/0BxP5VcAKnPrGekFFUXFLdUszXzA/view?usp=sharing" target="_blank"><img src="https://lh6.googleusercontent.com/bR3gDB-ywEt29dv3wjwMMi-Ta7XYveV7lQFMecMUu5Too0EFRKIk8XOYjuiKadVOqJ5AyE5ZVi9V01w=w1275-h521" height="250px" width="250px"></a></center>--><center><iframe src="https://drive.google.com/file/d/0BxP5VcAKnPrGekFFUXFLdUszXzA/preview" height="480" width="640">
</iframe></center><p style="margin-left: 20px;">
	<br>
	<span style="font-family: Arial;"></span></p><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">( Ref: <a href="http://www.instructables.com/id/Arduino-and-L293D-Robot-Part-1-/">http://www.instructables.com/id/Arduino-and-L293D-Robot-Part-1-/</a> ) </span><br>
	<a href="http://www.instructables.com/id/Arduino-and-L293D-Robot-Part-1-/"></a></h5><p style="margin-left: 20px;">
	<span style="font-family: Arial;"></span></p><h5 style="margin-left: 20px;">
	<span style="font-family: Arial;">The header file &lt;Servo.h&gt; includes functions for controlling the Servo Motor. Servo motor is used for dispensing of coins. A DC motor is used for running a conveyor belt that holds the entire set up as below. The code first asks the DC Motor to rotate at a certain fixed speed for a fixed time (which is a function of the column number). Then the Servo motor is rotated by a fixed angle to drop the chip and rotated back to its initial position. The DC Motor is then rotated in the reverse direction to attain the initial position.<br>
	</span></h5><p style="margin-left: 20px;">
	<span style="font-family: Arial;"></span></p><p style="margin-left: 20px;">
	<span style="font-family: Arial;"> <a href="https://drive.google.com/file/d/0BxP5VcAKnPrGVHdkRTJKbGJkSlE/view?usp=sharing"></a></span></p>
<!--<center><a href="https://drive.google.com/file/d/0BxP5VcAKnPrGVHdkRTJKbGJkSlE/view?usp=sharing"><img src="https://lh3.googleusercontent.com/2Jww43jfZKHaUvmPc106qzoZwka1ee7PKAHatFN51jnd0HpiqAjCDAmsT0H8e6IZfzZPyMA37klwmkk=w1275-h519" height="250px" width="250px"></a></center>--><center><iframe src="https://drive.google.com/file/d/0BxP5VcAKnPrGVHdkRTJKbGJkSlE/preview" height="480" width="640">
</iframe></center>
<a href="https://drive.google.com/file/d/0BxP5VcAKnPrGVHdkRTJKbGJkSlE/view?usp=sharing">
</a><a href="https://drive.google.com/file/d/0BxP5VcAKnPrGcFkyZHVxM0s0TEk/view?usp=sharing" target="_blank">
</a><p>
	<a href="https://drive.google.com/file/d/0BxP5VcAKnPrGcFkyZHVxM0s0TEk/view?usp=sharing" target="_blank"></a></p><p style="margin-left: 20px;">
	<a href="https://drive.google.com/file/d/0BxP5VcAKnPrGcFkyZHVxM0s0TEk/view?usp=sharing" target="_blank">
	<span style="font-family: Arial;"></span></a></p>